/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk_D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("DCa[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DCa";
}

SIGNAL("m")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("m[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("n[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("block2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("block2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("block2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("block2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("counter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

SIGNAL("counter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

SIGNAL("counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

SIGNAL("counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2000;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
		}
	}
}

TRANSITION_LIST("clk_D")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 65.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 115.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
	}
}

TRANSITION_LIST("clk_in")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 166;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("DCa[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1220.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 540.0;
	}
}

TRANSITION_LIST("DCa[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1185.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 660.0;
	}
}

TRANSITION_LIST("DCa[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1065.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("DCa[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1060.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 835.0;
	}
}

TRANSITION_LIST("DCa[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 940.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 955.0;
	}
}

TRANSITION_LIST("DCa[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 960.0;
	}
}

TRANSITION_LIST("DCa[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 765.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1080.0;
	}
}

TRANSITION_LIST("DCa[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 645.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1220.0;
	}
}

TRANSITION_LIST("DCa[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1255.0;
	}
}

TRANSITION_LIST("DCa[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 115.0;
	}
}

TRANSITION_LIST("DCa[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 115.0;
	}
}

TRANSITION_LIST("DCa[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 345.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
	}
}

TRANSITION_LIST("DCa[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 240.0;
	}
}

TRANSITION_LIST("DCa[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 380.0;
	}
}

TRANSITION_LIST("DCa[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 415.0;
	}
}

TRANSITION_LIST("DCa[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1260.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 535.0;
	}
}

TRANSITION_LIST("m[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("m[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("m[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("m[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("m[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}

TRANSITION_LIST("m[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}

TRANSITION_LIST("m[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("m[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("n[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("n[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("n[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("n[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("n[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("n[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}

TRANSITION_LIST("n[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("n[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("block2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("block2[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 65.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 95.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
	}
}

TRANSITION_LIST("block2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("block2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("counter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 145.0;
			LEVEL 1 FOR 175.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 145.0;
			LEVEL 0 FOR 175.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
	}
}

TRANSITION_LIST("counter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 65.0;
			LEVEL 1 FOR 95.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 65.0;
			LEVEL 0 FOR 95.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 95.0;
		LEVEL 0 FOR 80.0;
	}
}

TRANSITION_LIST("counter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 41;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 55.0;
	}
}

TRANSITION_LIST("counter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 83;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 35.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 35.0;
		}
		LEVEL 1 FOR 20.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "m";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "m[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "m[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "m[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "m[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "m[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "m[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "m[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "m[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "n[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "n[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "n[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "n[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "n[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "n[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "n[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "n[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "block2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "block2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "block2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "block2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
	CHILDREN = 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "counter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "counter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 42;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
